// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// EvalConfetti
List EvalConfetti(NumericVector pars, int ngen, int nsteps_out, int ntrees, double xext, double yext, double rmax, double bw1, int metaSAD);
RcppExport SEXP confettiRbasic_EvalConfetti(SEXP parsSEXP, SEXP ngenSEXP, SEXP nsteps_outSEXP, SEXP ntreesSEXP, SEXP xextSEXP, SEXP yextSEXP, SEXP rmaxSEXP, SEXP bw1SEXP, SEXP metaSADSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< int >::type ngen(ngenSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps_out(nsteps_outSEXP);
    Rcpp::traits::input_parameter< int >::type ntrees(ntreesSEXP);
    Rcpp::traits::input_parameter< double >::type xext(xextSEXP);
    Rcpp::traits::input_parameter< double >::type yext(yextSEXP);
    Rcpp::traits::input_parameter< double >::type rmax(rmaxSEXP);
    Rcpp::traits::input_parameter< double >::type bw1(bw1SEXP);
    Rcpp::traits::input_parameter< int >::type metaSAD(metaSADSEXP);
    rcpp_result_gen = Rcpp::wrap(EvalConfetti(pars, ngen, nsteps_out, ntrees, xext, yext, rmax, bw1, metaSAD));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"confettiRbasic_EvalConfetti", (DL_FUNC) &confettiRbasic_EvalConfetti, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_confettiRbasic(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
